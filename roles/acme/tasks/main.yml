---
- name: install acme-client
  pkgng:
    name: acme-client
    cached: true

- name: create the challenge directory
  file:
    name: "{{ acme_challenge_dir }}"
    state: directory
    mode: 0755

- name: copy up ssl_params
  copy:
    src: ssl_params
    dest: "{{ webserver_config }}/"
  notify:
    - reload nginx

- name: generate the renewal script
  template:
    src: acme-client.sh.j2
    dest: "{{ acme_client_root }}/acme-client.sh"
    mode: 0555

- name: generate the deploy script
  lineinfile:
    path: "{{ acme_client_root }}/deploy.sh"
    mode: 0555
    create: true
    state: present
    insertbefore: BOF
    line: "#!/bin/sh"

- name: restart webserver on cert deployment
  lineinfile:
    path: "{{ acme_client_root }}/deploy.sh"
    state: present
    insertafter: EOF
    line: "service nginx reload"

- name: populate domains.txt
  lineinfile:
    dest: "{{ acme_client_root }}/domains.txt"
    create: true
    regexp: "^{{ item }} "
    line: "{{ item }} {{ item | subdomains(acme_domains[item]) | join(' ') }}"
  loop: '{{ acme_domains.keys() | list }}'
  notify:
    - generate missing certificates

- name: populate periodic.conf
  lineinfile:
    dest: /etc/periodic.conf
    regexp: "^#?{{ item.split('=', 1) | first }}="
    line: "{{ item }}"
  with_items:
    - weekly_acme_client_enable=YES
    - weekly_acme_client_renewscript="{{ acme_client_root }}/acme-client.sh"
    - weekly_acme_client_deployscript="{{ acme_client_root }}/deploy.sh"
