---
- name: install acme-tiny
  pkgng:
    name: acme-tiny
    cached: true

- name: create the challenge directory
  file:
    name: "{{ acme_challenge_dir }}"
    state: directory
    mode: 0755

- name: copy up ssl_params
  copy:
    src: ssl_params
    dest: "{{ webserver_config }}/"
  notify:
    - reload nginx

- name: copy up periodic task
  copy:
    src: periodic.sh
    dest: "/usr/local/etc/periodic/weekly/000.acme-tiny.sh"
    mode: 0755

- name: create the client directory
  file:
    name: "{{ acme_client_root }}"
    state: directory

- name: generate the renewal script
  template:
    src: acme-client.sh.j2
    dest: "{{ acme_client_root }}/acme-client.sh"
    mode: 0555

- name: generate the deploy script
  lineinfile:
    path: "{{ acme_client_root }}/deploy.sh"
    mode: 0555
    create: true
    state: present
    insertbefore: BOF
    line: "#!/bin/sh"

- name: restart webserver on cert deployment
  lineinfile:
    path: "{{ acme_client_root }}/deploy.sh"
    state: present
    insertafter: EOF
    line: "service nginx reload"

- name: populate domains.txt
  lineinfile:
    dest: "{{ acme_client_root }}/domains.txt"
    create: true
    regexp: "^{{ item }} ?"
    line: "{{ item }} {{ item | subdomains(acme_domains[item]) | join(' ') }}"
  loop: "{{ acme_domains.keys() | list }}"

- name: ensure account key exists
  command: openssl genrsa -out "{{ acme_client_root }}/privkey.pem" 4096
  args:
    creates: "{{ acme_client_root }}/privkey.pem"

- name: protect account key
  file:
    name: "{{ acme_client_root }}/privkey.pem"
    state: file
    mode: 0500

- name: populate periodic.conf
  lineinfile:
    dest: /etc/periodic.conf
    regexp: "^#?{{ item.split('=', 1) | first }}="
    line: "{{ item }}"
  loop:
    - weekly_acme_tiny_enable="YES"

- name: deploy temporary vhost for {{ item.key }}
  template:
    src: vhost.j2
    dest: "{{ webserver_config }}/vhosts/{{ item.key }}"
    force: false
  loop: "{{ acme_domains | dict2items }}"
  notify:
    - reload nginx
    - generate missing certificates
